{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,OAAQC,SAASC,cAAc,SAC/BC,QAASF,SAASC,cAAc,kBAChCE,OAAQH,SAASC,cAAc,iBAC/BG,SAAUJ,SAASC,cAAc,oBA0BnC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAhCPT,EAAKC,OAAOe,iBAAiB,UAAU,SAAAC,GACrCA,EAAMC,iBAMN,IALA,IAAMC,EAAQnB,EAAKI,QAAQgB,MACrBC,EAAOrB,EAAKK,OAAOe,MACnBE,EAAStB,EAAKM,SAASc,MAEvBG,EAAW,GACRC,EAAI,EAAGA,EAAIF,EAAQE,IAAK,CAC/B,IAEMC,EAAUlB,EAFCiB,EAAI,EACHL,EAAQK,EAAIH,GAE9BE,EAASG,KAAKD,E,CAGhBf,QAAQiB,IAAIJ,GACTK,MAAK,SAAAC,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MACjBqB,EAAAhC,GAASiC,OAAOC,QAAQ,qBAAoCC,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M,IAEnEyB,OAAM,SAAAL,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MAClBqB,EAAAhC,GAASiC,OAAOI,QAAQ,oBAAmCF,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  formEl: document.querySelector('.form'),\n  delayEl: document.querySelector('[name=\"delay\"]'),\n  stepEl: document.querySelector('[name=\"step\"]'),\n  amountEl: document.querySelector('[name=\"amount\"]'),\n};\n\nrefs.formEl.addEventListener('submit', event => {\n  event.preventDefault();\n  const delay = refs.delayEl.value;\n  const step = refs.stepEl.value;\n  const amount = refs.amountEl.value;\n\n  const promises = [];\n  for (let i = 0; i < amount; i++) {\n    const position = i + 1;\n    const thisDelay = delay + i * step;\n    const promise = createPromise(position, thisDelay);\n    promises.push(promise);\n  }\n\n  Promise.all(promises)\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n    });\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","formEl","document","querySelector","delayEl","stepEl","amountEl","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","delay1","value","step","amount","promises","i","promise","push","all","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.568848b2.js.map"}